---
# %BEGIN_COPYRIGHT%
#
# Copyright 2015-2023 Ian McWilliam (kaosagnt@gmail.com).
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
# %END_COPYRIGHT%

# Add a new user to an Apache .htpasswd file.
- hosts: "{{ hosts | default('localhost') }}"
  name: "Add a new user to an Apache .htpasswd file."
  become: true

  vars_prompt:
    - name: "user_name"
      prompt: "Enter a username"
      private: false

    - name: "user_password"
      prompt: "Enter a password"
      private: false

    - name: "verify_password"
      prompt: "Verify entered password"
      private: false

    - name: "crypt_type"
      prompt: "Encryption type:\n(a) apr_md5_crypt\n(d) des_crypt\n(l)ldap_sha1\n(p) plaintext\nEnter (a,d,l,p)"
      private: false

    - name: "htpasswd_file"
      prompt: "Enter path/filename of the htpasswd file (Note: requires absolute pathname to file)"
      private: false

    - name: "file_owner"
      prompt: "Enter owner name of the htpasswd file (default: root, leave blank for default)"
      private: false

    - name: "file_group"
      prompt: "Enter group name of the htpasswd file (default: root, leave blank for default)"
      private: false

#  vars:
#    print_information: true

  tasks:
    - import_tasks: ../common/common_information.yml

    - name: "Invalid User name"
      local_action:
        command printf "%s" \
        "Invalid username."
      when: user_name.find(':') >= 0
            or
            user_name.find(' ') >= 0
            or
            user_name | length >= 32
            or
            user_name | length == 9
      failed_when: true
      changed_when: false

    - name: "Invalid Password"
      local_action:
        command printf "%s" \
        "Invalid Password."
      when: user_password | length == 0
            or
            user_password != verify_password
            or
            user_password == user_name
      failed_when: true
      changed_when: false

    - name: "Invalid Path / Filename"
      local_action:
        command printf "%s" \
        "Invalid Path / Filename."
      when: htpasswd_file | length == 0
            or
            htpasswd_file | basename | length == 0
            or
            htpasswd_file.find('/') == -1

      failed_when: true
      changed_when: false

    - name: "Set default owner name."
      set_fact:
        file_owner: "root"
      when: file_owner | length == 0

    - name: "Set default group name."
      set_fact:
        file_group: "root"
      when: file_group | length == 0

    - name: "Set encryption scheme apr_md5_crypt."
      set_fact:
        crypt_type: "apr_md5_crypt"
      when: crypt_type == "a"

    - name: "Set encryption scheme des_crypt."
      set_fact:
        crypt_type: "des_crypt"
      when: crypt_type == "d"

    - name: "Set encryption scheme ldap_sha1."
      set_fact:
        crypt_type: "ldap_sha1"
      when: crypt_type == "l"

    - name: "Set encryption scheme plaintext."
      set_fact:
        crypt_type: "plaintext"
      when: crypt_type == "p"

    - name: "Add new user to .htpasswd file."
      htpasswd:
        name: "{{ user_name }}"
        password: "{{ user_password }}"
        path: "{{ htpasswd_file }}"
        crypt_scheme: "{{ crypt_type }}"
        state: present
        create: true
        owner: "{{ file_owner }}"
        group: "{{ file_group }}"
        mode: 0640
      register: new_user

#    - name: "Debug new_user"
#      local_action: command printf "{{ new_user }}"
#      changed_when: false
