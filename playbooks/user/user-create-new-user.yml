---
# %BEGIN_COPYRIGHT%
#
# Copyright 2015-2024 Ian McWilliam (kaosagnt@gmail.com).
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
# %END_COPYRIGHT%

# Create a new user and setup .ssh authorized_keys file on remote node.
- hosts: "{{ hosts | default('localhost') }}"
  name: "Create a new user and setup .ssh authorized_keys file"
  become: true

  vars_prompt:
    - name: "new_username"
      prompt: "Enter a username"
      private: false

    - name: "full_username"
      prompt: "Enter the users full name"
      private: false

    - name: "add_pub_ssh_key"
      prompt: "Enter a id_rsa.pub / id_ed25519.pub key to add to the users authorized keys file (leave blank to skip this step)"
      private: false

#  vars:
#    print_information: true

  tasks:
    - import_tasks: ../common/common_information.yml

#    - name: "Debug"
#      local_action: command printf " {{ new_username.find(':') }} "
#      changed_when: false

    - name: "Invalid User name"
      local_action:
        command printf "%s" \
        "Invalid username."
      when: new_username.find(':') >= 0
            or
            new_username.find(' ') >= 0
            or
            new_username | length >= 32
            or
            new_username | length == 0
      failed_when: true
      changed_when: false

    - name: "Invalid Users full name"
      local_action:
        command printf "%s" \
        "Invalid users full name."
      when: full_username.find(':') >= 0
            or
            full_username | length == 0
      failed_when: true
      changed_when: false

    - name: "Invalid SSH Public Key"
      local_action:
        command printf "%s" \
        "Invalid ssh id_rsa.pub / id_ed25519.pub key."
      when: add_pub_ssh_key.find('ssh-rsa') != 0
            and
            add_pub_ssh_key.find('ssh-ed25519') != 0
            and
            add_pub_ssh_key | length > 0
      failed_when: true
      changed_when: false

    - name: "Create new user on remote node"
      user:
        name: "{{ new_username }}"
        comment: "{{ full_username }}"
        shell: /bin/bash
      register: new_user

#    - name: "Debug new_user"
#      local_action: command printf "{{ new_user }}"
#      changed_when: false

    - name: "Adding public SSH key to new user account"
      authorized_key:
        user: "{{ new_username }}"
        key: "{{ add_pub_ssh_key }}"
        manage_dir: true
        state: present
      when: add_pub_ssh_key | length > 0
            and
            new_user.state == "present"
      register: authkey_result
