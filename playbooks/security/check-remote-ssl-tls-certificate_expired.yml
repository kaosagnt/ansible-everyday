---
# %BEGIN_COPYRIGHT%
#
# Copyright 2015-2025 Ian McWilliam (kaosagnt@gmail.com).
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
# %END_COPYRIGHT%

# Check when a remote SSL / TLS certificate will expire via HTTPS.
- hosts: "localhost"
  name: "Check when a remote SSL / TLS certificate will expire via HTTPS."

  vars_prompt:
    - name: "remote_host"
      prompt: "\nEnter the domain name / IP address of the remote HTTPS host"
      private: false

  vars:
    time_check_sec: 1209600
#     print_information: true

  tasks:
    - import_tasks: ../common/common_information.yml

    - name: "Invalid remote host domain name / IP address"
      local_action:
        command printf "%s" \
        "Invalid remote host domain name / IP address."
      when: remote_host | length == 0
      changed_when: false
      failed_when: true

    # RHEL contains <= 0.15 PyOpenSSL and won't run......
    # So we don't use the Ansible openssl module.

    - name: "Certificate details"
      command: openssl s_client -showcerts -tls1_2 -connect "{{ remote_host }}:443"
      register: cert_details
      changed_when: false
      failed_when: cert_details.rc != 0

    - name: "Is Certificate valid"
      shell: openssl s_client -showcerts -tls1_2 -connect "{{ remote_host }}:443" | openssl x509 -dates -checkend "{{ time_check_sec }}" -noout
      register: cert_status
      changed_when: false
      failed_when: false
      # failed_when: cert_status.rc != 0
      # failed_when: cert_status.stdout_lines|length > 0

    - name: "Certificate is valid"
      local_action: command printf "\nThe Certificate is valid within the 2 weeks test period or longer.\n"
      when: (cert_status.rc is defined
             and
             cert_status.rc == 0)
      changed_when: false

    - name: "Certificate has expired or will expire"
      local_action: command printf "\nThe Certificate has expired or will expire within the next 2 weeks.\nPlease manually check the certificate.\n"
      when: (cert_status.rc is defined
             and
             cert_status.rc != 0)
      failed_when: cert_status.rc != 0
      changed_when: false
