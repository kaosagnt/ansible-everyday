# %BEGIN_COPYRIGHT%
# 
# Copyright 2015-2023 Ian McWilliam (kaosagnt@gmail.com).
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
# %END_COPYRIGHT%

# env DEBUG=1 name-of-script
DEBUG=${DEBUG-0}
ANSIBLE_BASE_PATH=${SCRIPT_DIR%/bin*}

# Include user definable config.
if [ -f ${SCRIPT_DIR}/ansible_config ]; then

	. ${SCRIPT_DIR}/ansible_config

else

	ANSIBLE_CONF_PATH=${ANSIBLE_BASE_PATH}/conf
	ANSIBLE_HOSTS_PATH=${ANSIBLE_CONF_PATH}
	ANSIBLE_VERSION_OVERIDE=no
fi

ANSIBLE_CONFIG_FILE=ansible.cfg

ANSIBLE_PLAYBOOKS_PATH=${ANSIBLE_BASE_PATH}/playbooks
ANSIBLE_FACTS_PATH=${ANSIBLE_BASE_PATH}/facts

# Debug
print_debug() {
	printf "ANSIBLE_BASE_PATH=%s\nSCRIPT_DIR=%s\n" \
			"${ANSIBLE_BASE_PATH}" \
			"${SCRIPT_DIR}"

	printf "ANSIBLE_CONF_PATH=%s\nANSIBLE_HOSTS_PATH=%s\n" \
			"${ANSIBLE_CONF_PATH}" \
			"${ANSIBLE_HOSTS_PATH}" \

	printf "ANSIBLE_VERSION_OVERIDE=%s\nANSIBLE_CONFIG_FILE=%s\n" \
			"${ANSIBLE_VERSION_OVERIDE}" \
			"${ANSIBLE_CONFIG_FILE}"

	printf "ANSIBLE_PLAYBOOKS_PATH=%s\nANSIBLE_FACTS_PATH=%s\n\n" \
			"${ANSIBLE_PLAYBOOKS_PATH}" \
			"${ANSIBLE_FACTS_PATH}"
}

# Munge together all command line args.
MUNGED_AGRS=""

for i in "$@"
do
	MUNGED_ARGS="${MUNGED_ARGS} ${i}"
done

version_gte() {
	test "$(printf '%s\n' "${2}" "${1}" | sort -V | head -n 1)" = "${2}";
}

version_compare() {

	# 0) <
	# 1) >=

	if version_gte $VERSION $VERSION2; then
		return 1
	else
		return 0
	fi
}

playbook_version () {

	local _playbook_version=$(eval ansible-playbook --version \
							| grep -E -o "([0-9]{1,}\.)+[0-9]{1,}" \
							| awk '{printf("%s", $1)}')

	printf ${_playbook_version}
}

if [ X"${ANSIBLE_VERSION_OVERIDE}" = X"yes" ]; then

	ANSIBLE_CONFIG_FILE=ansible.2.cfg
	ANSIBLE_PLAYBOOK_VERSION=$(playbook_version)
	#ANSIBLE_PLAYBOOK_VERSION="2.9.21"
	#ANSIBLE_PLAYBOOK_VERSION="2.9.213.93.9.511.1.111.1.1"

	$(version_compare ${ANSIBLE_PLAYBOOK_VERSION} "3.0.0")
	ANSIBLE_VERSION_COMPARE=$?

	# Debug
	if [ ${DEBUG} -eq 1 ]; then
		printf "Version: %s\nANSIBLE_VERSION_COMPARE: %s\n\n" \
				"${ANSIBLE_PLAYBOOK_VERSION}" \
				"${ANSIBLE_VERSION_COMPARE}"
	fi

	if [ ${ANSIBLE_VERSION_COMPARE} -ne 1 ]; then
		# >= 3.0
		ANSIBLE_CONFIG_FILE=ansible.3.cfg
	fi

	$(version_compare ${ANSIBLE_PLAYBOOK_VERSION} "4.0.0")
	ANSIBLE_VERSION_COMPARE=$?

	# Debug
	if [ ${DEBUG} -eq 1 ]; then
		printf "ANSIBLE_VERSION_COMPARE: %s\n\n" \
				"${ANSIBLE_VERSION_COMPARE}"
	fi

	if [ ${ANSIBLE_VERSION_COMPARE} -ne 1 ]; then
		# >= 4.0
		ANSIBLE_CONFIG_FILE=ansible.4.cfg
	fi
fi

ANSIBLE_CONFIG="${ANSIBLE_CONF_PATH}/${ANSIBLE_CONFIG_FILE}"
export ANSIBLE_CONFIG

[ ${DEBUG} -eq 1 ] && print_debug

printf "Playbook Version: %s\nConfig File: %s\n\n" \
		"${ANSIBLE_PLAYBOOK_VERSION}" \
		"${ANSIBLE_CONFIG}"
